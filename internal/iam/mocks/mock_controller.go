// Code generated by MockGen. DO NOT EDIT.
// Source: MydroX/project-v/internal/iam/controller (interfaces: ControllerInterface)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_controller.go -package=mocks MydroX/project-v/internal/iam/controller ControllerInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockControllerInterface is a mock of ControllerInterface interface.
type MockControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockControllerInterfaceMockRecorder
}

// MockControllerInterfaceMockRecorder is the mock recorder for MockControllerInterface.
type MockControllerInterfaceMockRecorder struct {
	mock *MockControllerInterface
}

// NewMockControllerInterface creates a new mock instance.
func NewMockControllerInterface(ctrl *gomock.Controller) *MockControllerInterface {
	mock := &MockControllerInterface{ctrl: ctrl}
	mock.recorder = &MockControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockControllerInterface) EXPECT() *MockControllerInterfaceMockRecorder {
	return m.recorder
}

// AuthenticateUser mocks base method.
func (m *MockControllerInterface) AuthenticateUser(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AuthenticateUser", arg0)
}

// AuthenticateUser indicates an expected call of AuthenticateUser.
func (mr *MockControllerInterfaceMockRecorder) AuthenticateUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticateUser", reflect.TypeOf((*MockControllerInterface)(nil).AuthenticateUser), arg0)
}

// CreateUser mocks base method.
func (m *MockControllerInterface) CreateUser(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateUser", arg0)
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockControllerInterfaceMockRecorder) CreateUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockControllerInterface)(nil).CreateUser), arg0)
}

// DeleteUser mocks base method.
func (m *MockControllerInterface) DeleteUser(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteUser", arg0)
}

// DeleteUser indicates an expected call of DeleteUser.
func (mr *MockControllerInterfaceMockRecorder) DeleteUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockControllerInterface)(nil).DeleteUser), arg0)
}

// GetUser mocks base method.
func (m *MockControllerInterface) GetUser(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetUser", arg0)
}

// GetUser indicates an expected call of GetUser.
func (mr *MockControllerInterfaceMockRecorder) GetUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockControllerInterface)(nil).GetUser), arg0)
}

// UpdateUser mocks base method.
func (m *MockControllerInterface) UpdateUser(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateUser", arg0)
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockControllerInterfaceMockRecorder) UpdateUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockControllerInterface)(nil).UpdateUser), arg0)
}
