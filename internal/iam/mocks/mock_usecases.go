// Code generated by MockGen. DO NOT EDIT.
// Source: MydroX/project-v/internal/iam/usecases (interfaces: UsecasesInterface)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_usecases.go -package=mocks MydroX/project-v/internal/iam/usecases UsecasesInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUsecasesInterface is a mock of UsecasesInterface interface.
type MockUsecasesInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUsecasesInterfaceMockRecorder
}

// MockUsecasesInterfaceMockRecorder is the mock recorder for MockUsecasesInterface.
type MockUsecasesInterfaceMockRecorder struct {
	mock *MockUsecasesInterface
}

// NewMockUsecasesInterface creates a new mock instance.
func NewMockUsecasesInterface(ctrl *gomock.Controller) *MockUsecasesInterface {
	mock := &MockUsecasesInterface{ctrl: ctrl}
	mock.recorder = &MockUsecasesInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecasesInterface) EXPECT() *MockUsecasesInterfaceMockRecorder {
	return m.recorder
}

// Auth mocks base method.
func (m *MockUsecasesInterface) Auth(arg0 *context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Auth", arg0)
}

// Auth indicates an expected call of Auth.
func (mr *MockUsecasesInterfaceMockRecorder) Auth(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Auth", reflect.TypeOf((*MockUsecasesInterface)(nil).Auth), arg0)
}

// Create mocks base method.
func (m *MockUsecasesInterface) Create(arg0 context.Context, arg1, arg2, arg3, arg4 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUsecasesInterfaceMockRecorder) Create(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUsecasesInterface)(nil).Create), arg0, arg1, arg2, arg3, arg4)
}

// Delete mocks base method.
func (m *MockUsecasesInterface) Delete(arg0 *context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockUsecasesInterfaceMockRecorder) Delete(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockUsecasesInterface)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockUsecasesInterface) Get(arg0 *context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Get", arg0)
}

// Get indicates an expected call of Get.
func (mr *MockUsecasesInterfaceMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUsecasesInterface)(nil).Get), arg0)
}

// Update mocks base method.
func (m *MockUsecasesInterface) Update(arg0 *context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update", arg0)
}

// Update indicates an expected call of Update.
func (mr *MockUsecasesInterfaceMockRecorder) Update(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUsecasesInterface)(nil).Update), arg0)
}
