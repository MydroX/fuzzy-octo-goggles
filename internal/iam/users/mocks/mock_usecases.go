// Code generated by MockGen. DO NOT EDIT.
// Source: MydroX/project-v/internal/iam/users/usecases (interfaces: UsersUsecases)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_usecases.go -imports=models=MydroX/project-v/internal/users/models -package=mocks MydroX/project-v/internal/iam/users/usecases UsersUsecases
//

// Package mocks is a generated GoMock package.
package mocks

import (
	dto "MydroX/project-v/internal/iam/users/dto"
	models "MydroX/project-v/internal/iam/users/models"
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockUsersUsecases is a mock of UsersUsecases interface.
type MockUsersUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUsersUsecasesMockRecorder
}

// MockUsersUsecasesMockRecorder is the mock recorder for MockUsersUsecases.
type MockUsersUsecasesMockRecorder struct {
	mock *MockUsersUsecases
}

// NewMockUsersUsecases creates a new mock instance.
func NewMockUsersUsecases(ctrl *gomock.Controller) *MockUsersUsecases {
	mock := &MockUsersUsecases{ctrl: ctrl}
	mock.recorder = &MockUsersUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersUsecases) EXPECT() *MockUsersUsecasesMockRecorder {
	return m.recorder
}

// Auth mocks base method.
func (m *MockUsersUsecases) Auth(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Auth", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Auth indicates an expected call of Auth.
func (mr *MockUsersUsecasesMockRecorder) Auth(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Auth", reflect.TypeOf((*MockUsersUsecases)(nil).Auth), arg0, arg1, arg2)
}

// Create mocks base method.
func (m *MockUsersUsecases) Create(arg0 dto.CreateUserRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUsersUsecasesMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUsersUsecases)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockUsersUsecases) Delete(arg0 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockUsersUsecasesMockRecorder) Delete(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockUsersUsecases)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockUsersUsecases) Get(arg0 uuid.UUID) (*dto.GetUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*dto.GetUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUsersUsecasesMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUsersUsecases)(nil).Get), arg0)
}

// Update mocks base method.
func (m *MockUsersUsecases) Update(arg0 models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockUsersUsecasesMockRecorder) Update(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUsersUsecases)(nil).Update), arg0)
}
